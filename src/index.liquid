---
layout: default

# keep it short! shown in the header
title: Subscription Management w/Stripe & Netlify

# these are all optional and add links to the footer
repo: learnwithjason/stripe-jamstack-subscriptions
episode: https://www.learnwithjason.dev/subscription-management-in-jamstack-apps
tutorial:
---

<style>
  h1 {
    text-align: center;
  }

  .user-info {
    align-items: center;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(2, 1fr);
    list-style: none;
    padding: 0;
  }

  .user-info button {
    background: var(--dark-gray);
    border: 0;
    border-radius: 0.5rem;
    color: var(--white);
    display: block;
    font-family: var(--font-family);
    font-size: 1.5rem;
    font-weight: 900;
    padding: 1rem;
    text-align: center;
    text-decoration: none;
  }

  .corgi-content {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(3, 1fr);
  }

  .content h2 {
    font-size: 1.25rem;
    text-align: center;
  }

  .content-display {
    margin: 0;
  }

  .credit {
    display: block;
    font-size: 0.75rem;
  }

  .content img {
    width: 100%;
  }
</style>

<script
  type="text/javascript"
  src="https://identity.netlify.com/v1/netlify-identity-widget.js"
></script>

<h1>Sign Up for Premium Corgi Content</h1>

<div class="user-info"></div>

<div class="corgi-content">
  <div class="content free">
    <h2>Free Content</h2>
  </div>
  <div class="content pro">
    <h2>Pro Content</h2>
  </div>
  <div class="content premium">
    <h2>Premium Content</h2>
  </div>
</div>

<template id="content">
  <figure class="content-display">
    <img src="" alt="" />
    <figcaption>
      <a class="credit"></a>
    </figcaption>
  </figure>
</template>

<script>
  const loadUserInfo = (user) => {
    const container = document.querySelector('.user-info');
    const button1 = document.createElement('button');
    const button2 = document.createElement('button');

    container.innerHTML = '';

    if (!user) {
      button1.innerText = 'Log In';
      button1.addEventListener('click', () => netlifyIdentity.open('login'));

      button2.innerText = 'Sign Up';
      button2.addEventListener('click', () => netlifyIdentity.open('signup'));
    } else {
      button1.innerText = 'Log Out';
      button1.addEventListener('click', () => {
        netlifyIdentity.logout();
        location.reload();
      });

      button2.innerText = 'Manage Subscription';
      button2.addEventListener('click', () => {
        fetch('/.netlify/functions/create-manage-link', {
          method: 'POST',
          headers: {
            Authorization: `Bearer ${user.token.access_token}`,
          },
        })
          .then((res) => res.json())
          .then((link) => {
            window.location.href = link;
          })
          .catch((err) => console.error(err));
      });
    }

    container.appendChild(button1);
    container.appendChild(button2);
  };

  const loadContent = async (user) => {
    const token = user ? await netlifyIdentity.currentUser().jwt(true) : false;

    fetch('/.netlify/functions/set-cookie', {
      method: 'POST',
      body: JSON.stringify({ token }),
    })
      .then((res) => res.json())
      .then((res) => console.log({ res }));

    ['free', 'pro', 'premium'].forEach((type) => {
      fetch(`/.netlify/functions/get-protected-content`, {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ type }),
      })
        .then((res) => res.json())
        .then((data) => {
          const template = document.querySelector('#content');
          const container = document.querySelector(`.content.${type}`);

          // empty the node
          const oldContent = container.querySelector('.content-display');
          if (oldContent) {
            container.removeChild(oldContent);
          }

          const content = template.content.cloneNode(true);

          const img = content.querySelector('img');
          img.src = data.src;
          img.alt = data.alt;

          const credit = content.querySelector('.credit');
          credit.href = data.creditLink;
          credit.innerText = `Credit: ${data.credit}`;

          const caption = content.querySelector('figcaption');
          caption.innerText = data.message;
          caption.appendChild(credit);

          container.appendChild(content);
        });
    });
  };

  let initialized = false;
  async function initialize(user) {
    // make sure we only load content once
    if (initialized) return;
    initialized = true;

    loadUserInfo(user);
    loadContent(user);
  }

  window.netlifyIdentity.on('init', initialize);
  window.netlifyIdentity.on('login', (user) => {
    loadUserInfo(user);
    loadContent(user);
  });
  window.netlifyIdentity.on('logout', (user) => {
    loadUserInfo(user);
    loadContent(user);
  });
</script>
